name: Deploy

env:
  APP_NAME: "eventarz-zuul"
  CLUSTER_NAME: "EventarzCluster"
  IMAGE_PULL_SECRET: "eventarz-registry-secret"
  MANIFEST: 'deployment.yml'

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

#      - name: 'Validate manifest'
#        uses: azure/k8s-lint@v1
#        with:
#          manifests: |
#            deployment.yml

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Log in to Azure CR'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 'Build and push image'
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage --imageName "${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.APP_NAME }}:latest"
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.APP_NAME }}:latest

      # Set the target Azure Kubernetes Service (AKS) cluster.
      - name: 'Set target AKS'
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ secrets.RESOURCE_GROUP }}

      # Deploy app to AKS
      - name: 'Deploy to AKS'
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
            ${{ env.MANIFEST }}
          images: |
            ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.APP_NAME }}:latest
          imagepullsecrets: |
            ${{ env.IMAGE_PULL_SECRET }}

      - name: 'Restart pods'
        run: kubectl rollout restart deployment ${{ env.APP_NAME }}
